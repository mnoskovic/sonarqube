{
	"options": [{
			"enabled": false,
			"definition": {
				"id": "5d58cc01-7c75-450c-be18-a388ddb129ec"
			},
			"inputs": {
				"branchFilters": "[\"+refs/heads/*\"]",
				"additionalFields": "{}"
			}
		}, {
			"enabled": false,
			"definition": {
				"id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
			},
			"inputs": {
				"workItemType": "698886",
				"assignToRequestor": "true",
				"additionalFields": "{}"
			}
		}
	],
	"variables": {
		"clean": {
			"value": "false",
			"allowOverride": true
		},
		"image-name": {
			"value": "sonarqube"
		},
		"initial": {
			"value": "true",
			"allowOverride": true
		},
		"location":{
			"value":"westeurope"
		},
		"name": {
			"value": ""
		},
		"password": {
			"value": null,
			"isSecret": true
		},
		"system.debug": {
			"value": "false"
		},
		"username": {
			"value": "superuser"
		},
		"version": {
			"value": "7.4",
			"allowOverride": true
		}
	},
	"retentionRules": [{
			"branches": ["+refs/heads/*"],
			"artifacts": [],
			"artifactTypesToDelete": ["FilePath", "SymbolStore"],
			"daysToKeep": 10,
			"minimumToKeep": 1,
			"deleteBuildRecord": true,
			"deleteTestResults": true
		}
	],
	"properties": {},
	"tags": [],
	"jobAuthorizationScope": 1,
	"jobTimeoutInMinutes": 60,
	"jobCancelTimeoutInMinutes": 5,
	"process": {
		"phases": [{
				"steps": [{
						"environment": {},
						"enabled": true,
						"continueOnError": false,
						"alwaysRun": false,
						"displayName": "database",
						"timeoutInMinutes": 0,
						"condition": "succeeded()",
						"task": {
							"id": "94a74903-f93f-4075-884f-dc11f34058b4",
							"versionSpec": "2.*",
							"definitionType": "task"
						},
						"inputs": {
							"action": "Create Or Update Resource Group",
							"resourceGroupName": "sonarqube-data",
							"location": "$(location)",
							"templateLocation": "Linked artifact",
							"csmFileLink": "",
							"csmParametersFileLink": "",
							"csmFile": "Sonarqube.Database/azuredeploy.json",
							"csmParametersFile": "Sonarqube.Database/azuredeploy.parameters.json",
							"overrideParameters": "-name $(name) -username $(username) -password $(password)",
							"deploymentMode": "Incremental",
							"enableDeploymentPrerequisites": "None",
							"deploymentGroupEndpoint": "",
							"project": "",
							"deploymentGroupName": "",
							"copyAzureVMTags": "true",
							"runAgentServiceAsUser": "false",
							"userName": "",
							"password": "",
							"outputVariable": "",
							"deploymentOutputs": "database"
						}
					}, {
						"environment": {},
						"enabled": true,
						"continueOnError": false,
						"alwaysRun": false,
						"displayName": "registry",
						"timeoutInMinutes": 0,
						"condition": "succeeded()",
						"task": {
							"id": "94a74903-f93f-4075-884f-dc11f34058b4",
							"versionSpec": "2.*",
							"definitionType": "task"
						},
						"inputs": {
							"action": "Create Or Update Resource Group",
							"resourceGroupName": "sonarqube",
							"location": "$(location)",
							"templateLocation": "Linked artifact",
							"csmFileLink": "",
							"csmParametersFileLink": "",
							"csmFile": "Sonarqube.Registry/azuredeploy.json",
							"csmParametersFile": "Sonarqube.Registry/azuredeploy.parameters.json",
							"overrideParameters": "-name $(name)",
							"deploymentMode": "Incremental",
							"enableDeploymentPrerequisites": "None",
							"deploymentGroupEndpoint": "",
							"project": "",
							"deploymentGroupName": "",
							"copyAzureVMTags": "true",
							"runAgentServiceAsUser": "false",
							"userName": "",
							"password": "",
							"outputVariable": "",
							"deploymentOutputs": "registry"
						}
					}, {
						"environment": {},
						"enabled": true,
						"continueOnError": false,
						"alwaysRun": false,
						"displayName": "parameters",
						"timeoutInMinutes": 0,
						"condition": "succeeded()",
						"task": {
							"id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
							"versionSpec": "2.*",
							"definitionType": "task"
						},
						"inputs": {
							"targetType": "inline",
							"filePath": "",
							"arguments": "",
							"script": "$d = ConvertFrom-Json '$(database)'\n#$sqlConnectionString = $d.connectionString.value\n\n$sqlUsername = $d.username.value\n$sqlPassword = $d.password.value\n$sqlConnectionString = \"jdbc:sqlserver://$(name).database.windows.net:1433;database=sonar;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;\"\n\n#Write-Host '$(database)'\n\nWrite-Output (\"##vso[task.setvariable variable=sqlConnectionString;issecret=true]$sqlConnectionString\")\nWrite-Output (\"##vso[task.setvariable variable=sqlUsername;]$sqlUsername\")\nWrite-Output (\"##vso[task.setvariable variable=sqlPassword;issecret=true]$sqlPassword\")\n\n$r = ConvertFrom-Json '$(registry)'\n\n$rLoginServer = $r.loginServer.value\n$rUsername = $r.username.value\n$rPassword = $r.password.value\n\n#Write-Host '$(registry)'\n#Write-Host $r.loginServer.value\n#Write-Host $r.username.value\n#Write-Host $r.password.value\n\nWrite-Output (\"##vso[task.setvariable variable=rLoginServer;]$rLoginServer\")\nWrite-Output (\"##vso[task.setvariable variable=rUsername;]$rUsername\")\nWrite-Output (\"##vso[task.setvariable variable=rPassword;issecret=true]$rPassword\")",
							"errorActionPreference": "stop",
							"failOnStderr": "false",
							"ignoreLASTEXITCODE": "false",
							"pwsh": "false",
							"workingDirectory": ""
						}
					}, {
						"environment": {},
						"enabled": true,
						"continueOnError": false,
						"alwaysRun": false,
						"displayName": "delete repository",
						"timeoutInMinutes": 0,
						"condition": "and(succeeded(), eq(variables['clean'], 'true'))",
						"task": {
							"id": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
							"versionSpec": "1.*",
							"definitionType": "task"
						},
						"inputs": {
							"scriptLocation": "inlineScript",
							"scriptPath": "",
							"inlineScript": "az acr repository delete -n $(name) --repository $(image-name) --yes",
							"args": "",
							"cwd": "",
							"failOnStandardError": "false"
						}
					}, {
						"environment": {},
						"enabled": true,
						"continueOnError": false,
						"alwaysRun": false,
						"displayName": "build & publish",
						"timeoutInMinutes": 0,
						"condition": "succeeded()",
						"task": {
							"id": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
							"versionSpec": "1.*",
							"definitionType": "task"
						},
						"inputs": {
							"scriptLocation": "inlineScript",
							"scriptPath": "",
							"inlineScript": "az acr build --registry $(name) --image $(image-name):$(version)-$(Build.BuildId) $(Build.SourcesDirectory) --build-arg SONAR_VERSION=$(version)",
							"args": "",
							"cwd": "",
							"failOnStandardError": "false"
						}
					}, {
						"environment": {},
						"enabled": true,
						"continueOnError": false,
						"alwaysRun": false,
						"displayName": "sonarqube - create",
						"timeoutInMinutes": 0,
						"condition": "and(succeeded(), eq(variables['initial'], 'true'))",
						"task": {
							"id": "94a74903-f93f-4075-884f-dc11f34058b4",
							"versionSpec": "2.*",
							"definitionType": "task"
						},
						"inputs": {
							"action": "Create Or Update Resource Group",
							"resourceGroupName": "sonarqube",
							"location": "$(location)",
							"templateLocation": "Linked artifact",
							"csmFileLink": "",
							"csmParametersFileLink": "",
							"csmFile": "Sonarqube/azuredeploy.json",
							"csmParametersFile": "Sonarqube/azuredeploy.parameters.json",
							"overrideParameters": "-name $(name) -loginServer https://$(rLoginServer) -loginServerUsername $(rUsername) -loginServerPassword $(rPassword) -imageName $(image-name):latest -sqlConnectionString $(sqlConnectionString) -sqlUsername $(sqlUsername) -sqlPassword $(password) -version $(version)",
							"deploymentMode": "Incremental",
							"enableDeploymentPrerequisites": "None",
							"deploymentGroupEndpoint": "",
							"project": "",
							"deploymentGroupName": "",
							"copyAzureVMTags": "true",
							"runAgentServiceAsUser": "false",
							"userName": "",
							"password": "",
							"outputVariable": "",
							"deploymentOutputs": ""
						}
					}, {
						"environment": {},
						"enabled": true,
						"continueOnError": false,
						"alwaysRun": false,
						"displayName": "sonarqube - deploy",
						"timeoutInMinutes": 0,
						"condition": "and(succeeded(), ne(variables['initial'], 'true'))",
						"task": {
							"id": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
							"versionSpec": "4.*",
							"definitionType": "task"
						},
						"inputs": {
							"ConnectionType": "AzureRM",
							"PublishProfilePath": "$(System.DefaultWorkingDirectory)/**/*.pubxml",
							"PublishProfilePassword": "",
							"WebAppKind": "webAppContainer",
							"WebAppName": "$(name)",
							"DeployToSlotOrASEFlag": "false",
							"ResourceGroupName": "",
							"SlotName": "production",
							"DockerNamespace": "$(rLoginServer)",
							"DockerRepository": "$(image-name)",
							"DockerImageTag": "$(version)-$(Build.BuildId)",
							"VirtualApplication": "",
							"Package": "$(System.DefaultWorkingDirectory)/**/*.zip",
							"RuntimeStack": "",
							"RuntimeStackFunction": "",
							"StartupCommand": "",
							"ScriptType": "",
							"InlineScript": ":: You can provide your deployment commands here. One command per line.",
							"ScriptPath": "",
							"WebConfigParameters": "",
							"AppSettings": "",
							"ConfigurationSettings": "",
							"UseWebDeploy": "false",
							"DeploymentType": "webDeploy",
							"TakeAppOfflineFlag": "false",
							"SetParametersFile": "",
							"RemoveAdditionalFilesFlag": "false",
							"ExcludeFilesFromAppDataFlag": "false",
							"AdditionalArguments": "",
							"RenameFilesFlag": "false",
							"XmlTransformation": "false",
							"XmlVariableSubstitution": "false",
							"JSONFiles": ""
						}
					}
				],
				"name": "Agent job 1",
				"refName": "Phase_1",
				"condition": "succeeded()",
				"target": {
					"executionOptions": {
						"type": 0
					},
					"allowScriptsAuthAccessOption": false,
					"type": 1
				},
				"jobAuthorizationScope": 1,
				"jobCancelTimeoutInMinutes": 1
			}
		],
		"type": 1
	},
	"repository": {
		"properties": {
			"cleanOptions": "3",
			"labelSources": "0",
			"labelSourcesFormat": "$(build.buildNumber)",
			"reportBuildStatus": "true",
			"gitLfsSupport": "false",
			"skipSyncSource": "false",
			"checkoutNestedSubmodules": "false",
			"fetchDepth": "0"
		},
		"type": "TfsGit",
		"defaultBranch": "refs/heads/master",
		"clean": "true",
		"checkoutSubmodules": false
	},
	"queue": {
		"name": "Hosted VS2017"
	},	
	"processParameters": {},
	"quality": 1,
	"drafts": [],
	"name": "sonarqube",
	"path": "\\",
	"type": 2
	
}
